<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIo
        LTkwKCo2KyIjMkQyNjs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCAClAKUDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD0VnKSbQeKVZWLAA9aSQYYikTjNcnU3Hmk2570bqXGaYCB8dqc
        DmmYxTs0APBoLU0jNApkj91G6m7cUZxSKFD7qhuphbWks5XPlRs+PXANSjiquqBpNKu0QZdomAHrwaGC
        3MCfxlcpptneC2hZrjOUYn5AB6j/AArZ0LVhrWnJdxRGJm+8mcgHvXlcniK1bSba1IfdCsnzc854z06D
        Nei+CFdPDkBxtDcjPoahXvqb1YwS903dxb2NNwx6mpDzTc1RgNAzTs4pwwKRiDTsIZIXYfeqDljU9AxU
        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
        j3P40YoooGBpxWiigBKKKKAP/9k=
</value>
  </data>
</root>